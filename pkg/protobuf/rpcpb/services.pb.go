// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: rpcpb/services.proto

package rpcpb

import (
	builderpb "github.com/pygrum/monarch/pkg/protobuf/builderpb"
	clientpb "github.com/pygrum/monarch/pkg/protobuf/clientpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_null         LogLevel = 0
	LogLevel_LevelDebug   LogLevel = 1
	LogLevel_LevelInfo    LogLevel = 2
	LogLevel_LevelSuccess LogLevel = 3
	LogLevel_LevelWarn    LogLevel = 4
	LogLevel_LevelError   LogLevel = 5
	LogLevel_LevelFatal   LogLevel = 6
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "null",
		1: "LevelDebug",
		2: "LevelInfo",
		3: "LevelSuccess",
		4: "LevelWarn",
		5: "LevelError",
		6: "LevelFatal",
	}
	LogLevel_value = map[string]int32{
		"null":         0,
		"LevelDebug":   1,
		"LevelInfo":    2,
		"LevelSuccess": 3,
		"LevelWarn":    4,
		"LevelError":   5,
		"LevelFatal":   6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_rpcpb_services_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_rpcpb_services_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_rpcpb_services_proto_rawDescGZIP(), []int{0}
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=rpcpb.LogLevel" json:"log_level,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcpb_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_rpcpb_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_rpcpb_services_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_null
}

func (x *Notification) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_rpcpb_services_proto protoreflect.FileDescriptor

var file_rpcpb_services_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72, 0x70, 0x63, 0x70, 0x62, 0x1a, 0x17, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0x74, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x61, 0x72,
	0x6e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46, 0x61, 0x74, 0x61,
	0x6c, 0x10, 0x06, 0x32, 0xdc, 0x01, 0x0a, 0x07, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1e,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x32, 0x9a, 0x07, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x52, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0f,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x17, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x17, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x0f, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13,
	0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x48, 0x74,
	0x74, 0x70, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x70, 0x62,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0f, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13,
	0x2e, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0f, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e,
	0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x15,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79,
	0x67, 0x72, 0x75, 0x6d, 0x2f, 0x6d, 0x6f, 0x6e, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpcpb_services_proto_rawDescOnce sync.Once
	file_rpcpb_services_proto_rawDescData = file_rpcpb_services_proto_rawDesc
)

func file_rpcpb_services_proto_rawDescGZIP() []byte {
	file_rpcpb_services_proto_rawDescOnce.Do(func() {
		file_rpcpb_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpcpb_services_proto_rawDescData)
	})
	return file_rpcpb_services_proto_rawDescData
}

var file_rpcpb_services_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpcpb_services_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_rpcpb_services_proto_goTypes = []interface{}{
	(LogLevel)(0),                         // 0: rpcpb.LogLevel
	(*Notification)(nil),                  // 1: rpcpb.Notification
	(*builderpb.DescriptionsRequest)(nil), // 2: builderpb.DescriptionsRequest
	(*builderpb.OptionsRequest)(nil),      // 3: builderpb.OptionsRequest
	(*builderpb.BuildRequest)(nil),        // 4: builderpb.BuildRequest
	(*clientpb.AgentRequest)(nil),         // 5: clientpb.AgentRequest
	(*clientpb.BuilderRequest)(nil),       // 6: clientpb.BuilderRequest
	(*clientpb.ProfileRequest)(nil),       // 7: clientpb.ProfileRequest
	(*clientpb.Empty)(nil),                // 8: clientpb.Empty
	(*clientpb.InstallRequest)(nil),       // 9: clientpb.InstallRequest
	(*clientpb.SessionsRequest)(nil),      // 10: clientpb.SessionsRequest
	(*clientpb.HTTPRequest)(nil),          // 11: clientpb.HTTPRequest
	(*builderpb.DescriptionsReply)(nil),   // 12: builderpb.DescriptionsReply
	(*builderpb.OptionsReply)(nil),        // 13: builderpb.OptionsReply
	(*builderpb.BuildReply)(nil),          // 14: builderpb.BuildReply
	(*clientpb.Agents)(nil),               // 15: clientpb.Agents
	(*clientpb.Builders)(nil),             // 16: clientpb.Builders
	(*clientpb.Profiles)(nil),             // 17: clientpb.Profiles
	(*clientpb.Sessions)(nil),             // 18: clientpb.Sessions
	(*clientpb.HTTPResponse)(nil),         // 19: clientpb.HTTPResponse
}
var file_rpcpb_services_proto_depIdxs = []int32{
	0,  // 0: rpcpb.Notification.log_level:type_name -> rpcpb.LogLevel
	2,  // 1: rpcpb.Builder.GetCommands:input_type -> builderpb.DescriptionsRequest
	3,  // 2: rpcpb.Builder.GetOptions:input_type -> builderpb.OptionsRequest
	4,  // 3: rpcpb.Builder.BuildAgent:input_type -> builderpb.BuildRequest
	5,  // 4: rpcpb.Client.Agents:input_type -> clientpb.AgentRequest
	5,  // 5: rpcpb.Client.RmAgents:input_type -> clientpb.AgentRequest
	6,  // 6: rpcpb.Client.Builders:input_type -> clientpb.BuilderRequest
	7,  // 7: rpcpb.Client.Profiles:input_type -> clientpb.ProfileRequest
	8,  // 8: rpcpb.Client.Commands:input_type -> clientpb.Empty
	8,  // 9: rpcpb.Client.Options:input_type -> clientpb.Empty
	4,  // 10: rpcpb.Client.Build:input_type -> builderpb.BuildRequest
	9,  // 11: rpcpb.Client.Install:input_type -> clientpb.InstallRequest
	6,  // 12: rpcpb.Client.Uninstall:input_type -> clientpb.BuilderRequest
	8,  // 13: rpcpb.Client.HttpOpen:input_type -> clientpb.Empty
	8,  // 14: rpcpb.Client.HttpClose:input_type -> clientpb.Empty
	8,  // 15: rpcpb.Client.HttpsOpen:input_type -> clientpb.Empty
	8,  // 16: rpcpb.Client.HttpsClose:input_type -> clientpb.Empty
	10, // 17: rpcpb.Client.Sessions:input_type -> clientpb.SessionsRequest
	8,  // 18: rpcpb.Client.Notify:input_type -> clientpb.Empty
	11, // 19: rpcpb.Client.Send:input_type -> clientpb.HTTPRequest
	12, // 20: rpcpb.Builder.GetCommands:output_type -> builderpb.DescriptionsReply
	13, // 21: rpcpb.Builder.GetOptions:output_type -> builderpb.OptionsReply
	14, // 22: rpcpb.Builder.BuildAgent:output_type -> builderpb.BuildReply
	15, // 23: rpcpb.Client.Agents:output_type -> clientpb.Agents
	1,  // 24: rpcpb.Client.RmAgents:output_type -> rpcpb.Notification
	16, // 25: rpcpb.Client.Builders:output_type -> clientpb.Builders
	17, // 26: rpcpb.Client.Profiles:output_type -> clientpb.Profiles
	12, // 27: rpcpb.Client.Commands:output_type -> builderpb.DescriptionsReply
	13, // 28: rpcpb.Client.Options:output_type -> builderpb.OptionsReply
	14, // 29: rpcpb.Client.Build:output_type -> builderpb.BuildReply
	1,  // 30: rpcpb.Client.Install:output_type -> rpcpb.Notification
	1,  // 31: rpcpb.Client.Uninstall:output_type -> rpcpb.Notification
	1,  // 32: rpcpb.Client.HttpOpen:output_type -> rpcpb.Notification
	1,  // 33: rpcpb.Client.HttpClose:output_type -> rpcpb.Notification
	1,  // 34: rpcpb.Client.HttpsOpen:output_type -> rpcpb.Notification
	1,  // 35: rpcpb.Client.HttpsClose:output_type -> rpcpb.Notification
	18, // 36: rpcpb.Client.Sessions:output_type -> clientpb.Sessions
	1,  // 37: rpcpb.Client.Notify:output_type -> rpcpb.Notification
	19, // 38: rpcpb.Client.Send:output_type -> clientpb.HTTPResponse
	20, // [20:39] is the sub-list for method output_type
	1,  // [1:20] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rpcpb_services_proto_init() }
func file_rpcpb_services_proto_init() {
	if File_rpcpb_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpcpb_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcpb_services_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rpcpb_services_proto_goTypes,
		DependencyIndexes: file_rpcpb_services_proto_depIdxs,
		EnumInfos:         file_rpcpb_services_proto_enumTypes,
		MessageInfos:      file_rpcpb_services_proto_msgTypes,
	}.Build()
	File_rpcpb_services_proto = out.File
	file_rpcpb_services_proto_rawDesc = nil
	file_rpcpb_services_proto_goTypes = nil
	file_rpcpb_services_proto_depIdxs = nil
}
