syntax = "proto3";
package rpcpb;
option go_package = "github.com/pygrum/monarch/pkg/rpcpb";

service Translator {
  rpc TranslateTo (Request) returns (Data) {}
  rpc TranslateFrom (Data) returns (Reply) {}
  rpc GetCmdDescriptions (DescriptionsRequest) returns (DescriptionsReply) {}
}
service Builder {
  rpc GetOptions (OptionsRequest) returns (OptionsReply) {}
  rpc BuildAgent (BuildRequest) returns (BuildReply) {}
}

enum Status {
  Success = 0;
  FailedWithMessage = 1; // The message is contained as the first response in the responses field
}

// External //////////////////////////////////////////
message Request {
  string agent_id = 1;
  int32 request_id = 2;
  int32 opcode = 3;
  repeated bytes args = 4;

}
message Reply {
  string agent_id = 1;
  int32  request_id = 2;
  Status status = 3;
  repeated Response responses = 4;
}
message Response {
  bytes data = 1;
  enum Dst {
    File = 0;
    Stdout = 1;
  }
  Dst destination = 2; // Whether to save response to file, or send to stdout
}
message Data {
  bytes message = 1;
}
/////////////////////////////////////////////////////

// Internal /////////////////////////////////////////
message DescriptionsRequest {} // Empty request, needs no values
message Description {
  string name = 1;
  int32 opcode = 2;
  string usage = 3;
  string description_short = 4;
  string description_long = 5;
  uint32 num_args = 6;
  bool admin = 7; // True if admin is needed to run the command
}
message DescriptionsReply {
  repeated Description descriptions = 1;
}
message OptionsRequest {}
message Option {
  string name = 1;
  string description = 2;
  string default = 3;
  bool required = 4;
}
message OptionsReply {
  repeated Option options = 1;
}
message BuildRequest {
  map<string, string> options = 1; // contains the agent ID
}

message BuildReply {
  Status status = 1;
  string error = 2;
  bytes build = 3;
}

